// { Driver Code Starts
#include <bits/stdc++.h> 
using namespace std; 

 // } Driver Code Ends
class Solution
{   
    public: 
    //Function to return a list of integers denoting spiral traversal of matrix.
    vector<int> spirallyTraverse(vector<vector<int> > matrix, int r, int c) 
    {
      vector<int>spiral;
    int left,right,bottom,top;
    int size1= r*c;
    int size2 = 0;
    top=0;
    bottom=r-1;
    left=0;
    right=c-1;
    
    while(size2<size1)
    {
        for(int i=left;i<=right && size2 <size1; i++)
        {
            spiral.push_back(matrix[top][i]);
            size2++;
        }
        top++;
        for(int i=top;i<=bottom && size2<size1; i++)
        {
            spiral.push_back(matrix[i][right]);
            size2++;
        }
        right--;
        for(int i=right; i>=left && size2<size1; i--)
        {
            spiral.push_back(matrix[bottom][i]);
            size2++;
        }
        bottom--;
         for(int i=bottom; i>=top && size2<size1; i--)
        {
            spiral.push_back(matrix[i][left]);
            size2++;
        }
        left++;
    }
    return spiral;  // code here 
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin>>t;
    
    while(t--) 
    {
        int r,c;
        cin>>r>>c;
        vector<vector<int> > matrix(r); 

        for(int i=0; i<r; i++)
        {
            matrix[i].assign(c, 0);
            for( int j=0; j<c; j++)
            {
                cin>>matrix[i][j];
            }
        }

        Solution ob;
        vector<int> result = ob.spirallyTraverse(matrix, r, c);
        for (int i = 0; i < result.size(); ++i)
                cout<<result[i]<<" ";
        cout<<endl;
    }
    return 0;
}  // } Driver Code Ends
